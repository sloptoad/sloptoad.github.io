{"ast":null,"code":"var _jsxFileName = \"/Users/louispisani/personal/sloptoad.github.io/liquality/src/api/Request.js\";\nimport React from 'react';\n\nclass Request extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  timedRequest() {\n    let intervalId = setInterval(async () => {\n      fetch(\"https://liquality.io/swap/agent/api/swap/marketinfo\").then(res => res.json()).then(results => {\n        this.setState({\n          isLoaded: true,\n          result: results,\n          intervalId: intervalId\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n      console.log(this.props.seconds);\n    }, parseInt(this.props.seconds));\n  }\n\n  componentDidMount() {\n    var newSec = parseInt(this.props.seconds);\n    console.log({\n      newSec\n    });\n    this.timedRequest();\n  }\n\n  componentDidUpdate() {\n    console.log(\"unmount\");\n    clearInterval(this.state.intervalId);\n    this.timedRequest();\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      result\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 18\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 18\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, this.state.result.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, this.state.result[index].from, this.state.result[index].to, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }\n      }, \" \", this.state.result[index].rate), this.state.result[index].orderExpiresIn, this.state.result[index].status)));\n    }\n  }\n\n}\n\nexport default Request;","map":{"version":3,"sources":["/Users/louispisani/personal/sloptoad.github.io/liquality/src/api/Request.js"],"names":["React","Request","Component","constructor","props","state","error","isLoaded","items","timedRequest","intervalId","setInterval","fetch","then","res","json","results","setState","result","console","log","seconds","parseInt","componentDidMount","newSec","componentDidUpdate","clearInterval","render","message","map","item","index","from","to","rate","orderExpiresIn","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAqC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AACHC,EAAAA,YAAY,GAAE;AACV,QAAIC,UAAU,GAAGC,WAAW,CAAC,YAAY;AACrCC,MAAAA,KAAK,CAAC,qDAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,OAAD,IAAa;AACX,aAAKC,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAE,IADE;AAEZW,UAAAA,MAAM,EAAEF,OAFI;AAGZN,UAAAA,UAAU,EAAEA;AAHA,SAAd;AAMD,OAVL,EAYI;AACA;AACA;AACCJ,MAAAA,KAAD,IAAW;AACT,aAAKW,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA;AAFY,SAAd;AAID,OApBL;AAsBEa,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWiB,OAAvB;AACD,KAxBuB,EAwBrBC,QAAQ,CAAC,KAAKlB,KAAL,CAAWiB,OAAZ,CAxBa,CAA5B;AAyBH;;AACCE,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAGF,QAAQ,CAAC,KAAKlB,KAAL,CAAWiB,OAAZ,CAArB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACI,MAAAA;AAAD,KAAZ;AACA,SAAKf,YAAL;AAEH;;AACDgB,EAAAA,kBAAkB,GAAE;AAClBN,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAM,IAAAA,aAAa,CAAC,KAAKrB,KAAL,CAAWK,UAAZ,CAAb;AACA,SAAKD,YAAL;AACD;;AAGDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBW,MAAAA;AAAnB,QAA8B,KAAKb,KAAzC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACsB,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACrB,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWa,MAAX,CAAkBW,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,kBACrB;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK1B,KAAL,CAAWa,MAAX,CAAkBa,KAAlB,EAAyBC,IAD9B,EAEK,KAAK3B,KAAL,CAAWa,MAAX,CAAkBa,KAAlB,EAAyBE,EAF9B,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAO,KAAK5B,KAAL,CAAWa,MAAX,CAAkBa,KAAlB,EAAyBG,IAAhC,CAHH,EAIK,KAAK7B,KAAL,CAAWa,MAAX,CAAkBa,KAAlB,EAAyBI,cAJ9B,EAKK,KAAK9B,KAAL,CAAWa,MAAX,CAAkBa,KAAlB,EAAyBK,MAL9B,CADD,CADH,CADF;AAeD;AACF;;AAzE8B;;AA6ErC,eAAenC,OAAf","sourcesContent":["import React from 'react';\n\n\nclass Request extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: false,\n          items: []\n        };\n      }\n    timedRequest(){\n        let intervalId = setInterval(async () => {\n            fetch(\"https://liquality.io/swap/agent/api/swap/marketinfo\")\n              .then(res => res.json())\n              .then(\n                (results) => {\n                  this.setState({\n                    isLoaded: true,\n                    result: results,\n                    intervalId: intervalId\n    \n                              });\n                },\n                \n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                  this.setState({\n                    isLoaded: true,\n                    error\n                  });\n                }\n              )\n              console.log(this.props.seconds)\n            }, parseInt(this.props.seconds))\n    }\n      componentDidMount() {\n          var newSec = parseInt(this.props.seconds)\n          console.log({newSec});\n          this.timedRequest();\n\n      }\n      componentDidUpdate(){\n        console.log(\"unmount\");\n        clearInterval(this.state.intervalId)\n        this.timedRequest();\n      }\n\n    \n      render() {\n        const { error, isLoaded, result } = this.state;\n        if (error) {\n          return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n          return <div>Loading...</div>;\n        } else {\n          return (\n            <ul>\n              {this.state.result.map((item, index) => (\n                <li key={index}>\n                    {this.state.result[index].from}\n                    {this.state.result[index].to}\n                   <div> {this.state.result[index].rate}</div>\n                    {this.state.result[index].orderExpiresIn}\n                    {this.state.result[index].status}\n\n\n                </li>\n              ))}\n            </ul>\n          );\n        }\n      }\n    }\n\n\nexport default Request;"]},"metadata":{},"sourceType":"module"}