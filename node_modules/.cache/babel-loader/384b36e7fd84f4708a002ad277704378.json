{"ast":null,"code":"var _jsxFileName = \"/Users/louispisani/personal/sloptoad.github.io/liquality/src/api/Request.js\";\nimport React from 'react';\n\nclass Request extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      time: this.props.seconds\n    };\n  }\n\n  componentDidMount() {\n    var zeroString = \"000\";\n    var newTime = this.state.time;\n    console.log({\n      newTime\n    });\n    setInterval(async () => {\n      fetch(\"https://liquality.io/swap/agent/api/swap/marketinfo\").then(res => res.json()).then(result => {\n        console.log({\n          result\n        });\n        this.setState({\n          isLoaded: true,\n          result: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    }, 3000);\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      result\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, this.state.result.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, this.state.result[index].from, this.state.result[index].to, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }\n      }, \" \", this.state.result[index].rate), this.state.result[index].orderExpiresIn, this.state.result[index].status)));\n    }\n  }\n\n}\n\nexport default Request;","map":{"version":3,"sources":["/Users/louispisani/personal/sloptoad.github.io/liquality/src/api/Request.js"],"names":["React","Request","Component","constructor","props","state","error","isLoaded","items","time","seconds","componentDidMount","zeroString","newTime","console","log","setInterval","fetch","then","res","json","result","setState","render","message","map","item","index","from","to","rate","orderExpiresIn","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAqC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,IAAI,EAAC,KAAKL,KAAL,CAAWM;AAJL,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,UAAU,GAAG,KAAjB;AACE,QAAIC,OAAO,GAAG,KAAKR,KAAL,CAAWI,IAAzB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,MAAAA;AAAD,KAAZ;AACFG,IAAAA,WAAW,CAAC,YAAY;AACxBC,MAAAA,KAAK,CAAC,qDAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACRP,QAAAA,OAAO,CAACC,GAAR,CAAY;AAACM,UAAAA;AAAD,SAAZ;AACF,aAAKC,QAAL,CAAc;AACZf,UAAAA,QAAQ,EAAE,IADE;AAEZc,UAAAA,MAAM,EAAEA;AAFI,SAAd;AAID,OATL,EAWI;AACA;AACA;AACCf,MAAAA,KAAD,IAAW;AACT,aAAKgB,QAAL,CAAc;AACZf,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA;AAFY,SAAd;AAID,OAnBL;AAqBC,KAtBU,EAsBR,IAtBQ,CAAX;AAuBD;;AAEDiB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBc,MAAAA;AAAnB,QAA8B,KAAKhB,KAAzC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACkB,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACjB,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWgB,MAAX,CAAkBI,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,kBACrB;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKtB,KAAL,CAAWgB,MAAX,CAAkBM,KAAlB,EAAyBC,IAD9B,EAEK,KAAKvB,KAAL,CAAWgB,MAAX,CAAkBM,KAAlB,EAAyBE,EAF9B,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAO,KAAKxB,KAAL,CAAWgB,MAAX,CAAkBM,KAAlB,EAAyBG,IAAhC,CAHH,EAIK,KAAKzB,KAAL,CAAWgB,MAAX,CAAkBM,KAAlB,EAAyBI,cAJ9B,EAKK,KAAK1B,KAAL,CAAWgB,MAAX,CAAkBM,KAAlB,EAAyBK,MAL9B,CADD,CADH,CADF;AAeD;AACF;;AAhE8B;;AAoErC,eAAe/B,OAAf","sourcesContent":["import React from 'react';\n\n\nclass Request extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: false,\n          items: [],\n          time:this.props.seconds\n        };\n      }\n    \n      componentDidMount() {\n        var zeroString = \"000\";\n          var newTime = this.state.time;\n          console.log({newTime})\n        setInterval(async () => {\n        fetch(\"https://liquality.io/swap/agent/api/swap/marketinfo\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n                console.log({result});\n              this.setState({\n                isLoaded: true,\n                result: result\n              });\n            },\n            \n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          )\n        }, 3000)\n      }\n    \n      render() {\n        const { error, isLoaded, result } = this.state;\n        if (error) {\n          return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n          return <div>Loading...</div>;\n        } else {\n          return (\n            <ul>\n              {this.state.result.map((item, index) => (\n                <li key={index}>\n                    {this.state.result[index].from}\n                    {this.state.result[index].to}\n                   <div> {this.state.result[index].rate}</div>\n                    {this.state.result[index].orderExpiresIn}\n                    {this.state.result[index].status}\n\n\n                </li>\n              ))}\n            </ul>\n          );\n        }\n      }\n    }\n\n\nexport default Request;"]},"metadata":{},"sourceType":"module"}