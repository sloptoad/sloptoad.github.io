{"ast":null,"code":"var _jsxFileName = \"/Users/louispisani/personal/sloptoad.github.io/liquality/src/api/Request.js\";\nimport React from 'react';\nimport shortid from \"shortid\";\n\nclass Request extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getRandomKey = () => {\n      return shortid.generate();\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    this.makeRequest();\n  }\n\n  componentDidMount() {\n    setInterval(async () => {\n      fetch(\"https://liquality.io/swap/agent/api/swap/marketinfo\").then(res => res.json()).then(results => {\n        this.setState({\n          isLoaded: true,\n          items: results\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n      console.log(this.props.seconds);\n    }, parseInt(this.props.seconds));\n  } //   componentDidUpdate(){\n  //       console.log(\"unmount\");\n  //     clearInterval(this.state.intervalId)\n  //     this.makeRequest(); \n  //   }\n\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      result\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 18\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 18\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, this.state.items.map((items, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: this.getRandomKey(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, this.state.items[index].from, \" - \", this.state.items[index].to, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 20\n        }\n      }, \" \", this.state.items[index].rate))));\n    }\n  }\n\n}\n\nexport default Request;","map":{"version":3,"sources":["/Users/louispisani/personal/sloptoad.github.io/liquality/src/api/Request.js"],"names":["React","shortid","Request","Component","constructor","props","getRandomKey","generate","state","error","isLoaded","items","componentDidMount","makeRequest","setInterval","fetch","then","res","json","results","setState","console","log","seconds","parseInt","render","result","message","map","index","from","to","rate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAIA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAqC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQjBC,YARiB,GAQF,MAAM;AACnB,aAAOL,OAAO,CAACM,QAAR,EAAP;AACH,KAVkB;;AAEf,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAIDC,EAAAA,iBAAiB,GAAE;AAChB,SAAKC,WAAL;AACF;;AAEDD,EAAAA,iBAAiB,GAAG;AAClBE,IAAAA,WAAW,CAAC,YAAY;AACxBC,MAAAA,KAAK,CAAC,qDAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,OAAD,IAAa;AACX,aAAKC,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,KAAK,EAAEQ;AAFK,SAAd;AAID,OARL,EAUI;AACA;AACA;AACCV,MAAAA,KAAD,IAAW;AACT,aAAKW,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA;AAFY,SAAd;AAID,OAlBL;AAoBEY,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWkB,OAAvB;AACD,KAtBU,EAsBRC,QAAQ,CAAC,KAAKnB,KAAL,CAAWkB,OAAZ,CAtBA,CAAX;AAuBD,GAzC8B,CA0CjC;AACA;AACA;AACA;AAEA;;;AAGEE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBgB,MAAAA;AAAnB,QAA8B,KAAKlB,KAAzC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACkB,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACjB,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWG,KAAX,CAAiBiB,GAAjB,CAAqB,CAACjB,KAAD,EAAQkB,KAAR,kBACpB;AAAK,QAAA,GAAG,EAAE,KAAKvB,YAAL,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKE,KAAL,CAAWG,KAAX,CAAiBkB,KAAjB,EAAwBC,IAD7B,SACsC,KAAKtB,KAAL,CAAWG,KAAX,CAAiBkB,KAAjB,EAAwBE,EAD9D,eAEG;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAwB,KAAKvB,KAAL,CAAWG,KAAX,CAAiBkB,KAAjB,EAAwBG,IAAhD,CAFH,CADD,CADH,CADF;AAWD;AACF;;AArE8B;;AAyErC,eAAe9B,OAAf","sourcesContent":["import React from 'react';\nimport shortid from \"shortid\";\n\n\n\nclass Request extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: false,\n          items: []\n        };\n      }\n      getRandomKey = () => {\n        return shortid.generate();\n    }\n      componentDidMount(){\n         this.makeRequest(); \n      }\n    \n      componentDidMount() {\n        setInterval(async () => {\n        fetch(\"https://liquality.io/swap/agent/api/swap/marketinfo\")\n          .then(res => res.json())\n          .then(\n            (results) => {\n              this.setState({\n                isLoaded: true,\n                items: results\n                 });\n            },\n            \n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          )\n          console.log(this.props.seconds)\n        }, parseInt(this.props.seconds))\n      }\n    //   componentDidUpdate(){\n    //       console.log(\"unmount\");\n    //     clearInterval(this.state.intervalId)\n    //     this.makeRequest(); \n\n    //   }\n \n    \n      render() {\n        const { error, isLoaded, result } = this.state;\n        if (error) {\n          return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n          return <div>Loading...</div>;\n        } else {\n          return (\n            <ul>\n              {this.state.items.map((items, index) => (\n                <li  key={this.getRandomKey()}>\n                    {this.state.items[index].from} - {this.state.items[index].to}\n                   <div className=\"rate\"> {this.state.items[index].rate}</div>\n\n                </li>\n              ))}\n            </ul>\n          );\n        }\n      }\n    }\n\n\nexport default Request;"]},"metadata":{},"sourceType":"module"}