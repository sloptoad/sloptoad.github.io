{"ast":null,"code":"var _jsxFileName = \"/Users/louispisani/personal/sloptoad.github.io/liquality/src/api/Request.js\";\nimport React from 'react';\nimport ReactCSSTransitionGroup from 'react-transition-group';\n\nclass Request extends React.Component {\n  constructor(props) {\n    super(props);\n    this.listRef = React.createRef();\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  timedRequest() {\n    let intervalId = setInterval(async () => {\n      fetch(\"https://liquality.io/swap/agent/api/swap/marketinfo\").then(res => res.json()).then(results => {\n        this.setState({\n          isLoaded: true,\n          result: results,\n          intervalId: intervalId\n        });\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n      console.log(this.props.seconds);\n    }, parseInt(this.props.seconds));\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    // Are we adding new items to the list?\n    // Capture the scroll position so we can adjust scroll later.\n    console.log({\n      prevProps\n    });\n\n    if (prevProps.list.length < this.props.list.length) {\n      const list = this.listRef.current;\n      return list.scrollHeight - list.scrollTop;\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    console.log(\"Mount\");\n    var newSec = parseInt(this.props.seconds);\n    console.log({\n      newSec\n    });\n    this.timedRequest();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\"UPDATE\");\n    clearInterval(this.state.intervalId);\n    this.timedRequest();\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      result\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 18\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 18\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, this.state.result.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, this.state.result[index].from, \" - \", this.state.result[index].to, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 20\n        }\n      }, \" \", this.state.result[index].rate))));\n    }\n  }\n\n}\n\nexport default Request;","map":{"version":3,"sources":["/Users/louispisani/personal/sloptoad.github.io/liquality/src/api/Request.js"],"names":["React","ReactCSSTransitionGroup","Request","Component","constructor","props","listRef","createRef","state","error","isLoaded","items","timedRequest","intervalId","setInterval","fetch","then","res","json","results","setState","result","console","log","seconds","parseInt","getSnapshotBeforeUpdate","prevProps","prevState","list","length","current","scrollHeight","scrollTop","componentDidMount","newSec","componentDidUpdate","snapshot","clearInterval","render","message","map","item","index","from","to","rate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactCSSTransitionGroup from 'react-transition-group';\n\n\nclass Request extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.listRef = React.createRef();\n\n        this.state = {\n          error: null,\n          isLoaded: false,\n          items: []\n        };\n      }\n    timedRequest(){\n        let intervalId = setInterval(async () => {\n            fetch(\"https://liquality.io/swap/agent/api/swap/marketinfo\")\n              .then(res => res.json())\n              .then(\n                (results) => {\n                  this.setState({\n                    isLoaded: true,\n                    result: results,\n                    intervalId: intervalId\n    \n                              });\n                },\n            \n                (error) => {\n                  this.setState({\n                    isLoaded: true,\n                    error\n                  });\n                }\n              )\n              console.log(this.props.seconds)\n            }, parseInt(this.props.seconds))\n    }\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        // Are we adding new items to the list?\n        // Capture the scroll position so we can adjust scroll later.\n        console.log({prevProps})\n        if (prevProps.list.length < this.props.list.length) {\n          const list = this.listRef.current;\n          return list.scrollHeight - list.scrollTop;\n        }\n        return null;\n      }\n      componentDidMount() {\n          console.log(\"Mount\")\n          var newSec = parseInt(this.props.seconds)\n          console.log({newSec});\n          this.timedRequest();\n\n      }\n      componentDidUpdate(prevProps, prevState, snapshot){\n        console.log(\"UPDATE\");\n        clearInterval(this.state.intervalId)\n        this.timedRequest();\n      }\n\n    \n      render() {\n        const { error, isLoaded, result } = this.state;\n        if (error) {\n          return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n          return <div>Loading...</div>;\n        } else {\n          return (\n            <ul>\n              {this.state.result.map((item, index) => (\n                <li key={index}>\n                    {this.state.result[index].from} - {this.state.result[index].to}\n \n                   <div> {this.state.result[index].rate}</div>\n                    {/* {this.state.result[index].orderExpiresIn}\n                    {this.state.result[index].status} */}\n                </li>\n              ))}\n            </ul>\n          );\n        }\n      }\n    }\n\n\nexport default Request;"]},"metadata":{},"sourceType":"module"}